/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    sushiSalmon: THREE.Mesh;
    Mesh_salmon: THREE.Mesh;
    Mesh_salmon_1: THREE.Mesh;
  };
  materials: {
    _defaultMat: THREE.MeshStandardMaterial;
    orange: THREE.MeshStandardMaterial;
    brownLight: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    "https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/sushi-salmon/model.gltf"
  ) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.sushiSalmon.geometry}
        material={materials._defaultMat}
        scale={[1, 0.59, 1]}
      >
        <group position={[0, 0.07, 0]} scale={[0.85, 1.69, 1.15]}>
          <mesh
            geometry={nodes.Mesh_salmon.geometry}
            material={materials.orange}
          />
          <mesh
            geometry={nodes.Mesh_salmon_1.geometry}
            material={materials.brownLight}
          />
        </group>
      </mesh>
    </group>
  );
}

useGLTF.preload(
  "https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/sushi-salmon/model.gltf"
);
