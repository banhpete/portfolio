/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    cornDog: THREE.Mesh;
    dog: THREE.Mesh;
  };
  materials: {
    brownLight: THREE.MeshStandardMaterial;
    brownDark: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF(
    "https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/corn-dog/model.gltf"
  ) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.cornDog.geometry} material={materials.brownLight}>
        <mesh
          geometry={nodes.dog.geometry}
          material={materials.brownDark}
          position={[0.1, 0, 0]}
          rotation={[0, -Math.PI / 2, 0]}
          scale={[1.29, 1.29, 1.65]}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload(
  "https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/corn-dog/model.gltf"
);
